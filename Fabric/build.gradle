plugins {
	id 'fabric-loom' version '1.7-SNAPSHOT'
	id 'maven-publish'
}

repositories {
maven { url 'https://jitpack.io' }
jcenter()
maven { url "https://maven.shedaniel.me/" }
maven { url "https://maven.terraformersmc.com/releases/"}
maven { url "https://maven.architectury.dev/" }
maven {
    // location of the maven that hosts JEI files since January 2023
    name = "Jared's maven"
    url = "https://maven.blamejared.com/"
  }
  maven {
        url 'https://www.cursemaven.com'
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
    url "https://squiddev.cc/maven/"
    content {
      includeGroup("cc.tweaked")
      includeModule("org.squiddev", "Cobalt")
    }
  }
  maven {
    	url = "http://localhost:8000"
		allowInsecureProtocol true
		content {
            includeGroup "local"
        }
	}
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.officialMojangMappings()
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	
	modImplementation("com.terraformersmc:modmenu:11.0.1") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }
    
    modImplementation "me.shedaniel.cloth.api:cloth-utils-v1:2.0.54"
    
    modCompileOnly("cc.tweaked:cc-tweaked-1.21-fabric-api:1.111.0")
    modImplementation("cc.tweaked:cc-tweaked-1.21-fabric:1.111.0")
    
	implementation "com.electronwill.night-config:core:3.8.0"
    implementation "com.electronwill.night-config:toml:3.8.0"
	modImplementation "curse.maven:forge-config-api-port-fabric-547434:5535847"
	
	// compile against the JEI API but do not include it at runtime
	modCompileOnlyApi("mezz.jei:jei-1.21-common-api:${project.jei_version}")
	modCompileOnlyApi("mezz.jei:jei-1.21-fabric-api:${project.jei_version}")
	// at runtime, use the full JEI jar for Fabric
	modRuntimeOnly("mezz.jei:jei-1.21-fabric:${project.jei_version}")
}

loom {
	accessWidenerPath = file("src/main/resources/toms_peripherals.accesswidener")
}

sourceSets {
	main {
		java {
			srcDir "../TomsPeripherals-121/src/platform-shared/java"
			srcDir "../TomsPeripherals/src/shared/java"
		}
		resources {
			srcDir "../TomsPeripherals-121/src/platform-shared/resources"
			srcDir "../TomsPeripherals/src/shared/resources"
		}
	}
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
		def mavenURL = System.getProperty("mavenDir")
		if ("${mavenURL}" != "null") {
			maven {
				url = file(mavenURL)
			}
		}
	}
}
